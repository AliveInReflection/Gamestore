@using GameStore.WebUI.Helpers
@model GameStore.WebUI.Models.CreateGameViewModel


<div class="editor-label">
    @Html.LabelFor(model => model.GameKey)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.GameKey)
    @Html.ValidationMessageFor(model => model.GameKey)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.GameName)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.GameName)
    @Html.ValidationMessageFor(model => model.GameName)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.TextAreaFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.PublisherId)
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.PublisherId, ViewBag.Publishers as IEnumerable<SelectListItem>)
    @Html.ValidationMessageFor(model => model.PublisherId)
</div>


<div class="editor-label">
    @Html.LabelFor(model => model.GenreIds)
</div>
<div class="editor-field">
    @Html.ListBoxFor(m => m.GenreIds,ViewBag.Genres as IEnumerable<SelectListItem>)
    @Html.ValidationMessageFor(model => model.GenreIds)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.PlatformTypeIds)
</div>
<div class="editor-field">
    @Html.ListBoxFor(m => m.PlatformTypeIds, ViewBag.PlatformTypes as IEnumerable<SelectListItem>)
    @Html.ValidationMessageFor(model => model.PlatformTypeIds)
</div>


<div class="editor-label">
    @Html.LabelFor(model => model.Price)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Price)
    @Html.ValidationMessageFor(model => model.Price)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.UnitsInStock)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.UnitsInStock)
    @Html.ValidationMessageFor(model => model.UnitsInStock)
</div>


<div class="editor-label">
    @Html.LabelFor(model => model.Discontinued)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Discontinued)
    @Html.ValidationMessageFor(model => model.Discontinued)
</div>